@model Castalia.WEB.Models.LogViewModel

@{
    ViewBag.Title = "FinishedCourses";
}
@switch (Model.CourseStatus)
{
    case "notStarted":
        ViewBag.Title = "Not started Courses";
        <h2>Future courses</h2>
        break;
    case "finished":
        ViewBag.Title = "Finished Courses";
        <h2>Courses that you finished</h2>

        break;
    case "inProgress":
        ViewBag.Title = "Courses in progress";
        <h2>Courses that you finished</h2>
        break;
}

@foreach (var log in Model.Logs)
{
    <div class="card border-primary mb-3" style="max-width: 20rem;">
        <div class="card-header">@log.Course.CourseName</div>
        <div class="card-body">
            Amount of students in course: @log.Course.AmountOfStudents
            <p class="card-text">You registred @log.RegisterDate.ToShortDateString()</p>
            Duration of the course @log.Course.DurationDays days
            @switch (Model.CourseStatus)
            {
                case "notStarted":
                    <p class="card-text">Days to start:  @(DateTime.Now - log.Course.StartDate).TotalDays</p>
                    break;
                case "finished":
                    <p class="card-text">
                        Your mark:  @if (log.Mark == null)
                        {
                        <p class="text-danger"> Inform your teacher about need for mark</p>}
                    else
                    {@log.Mark}
                        </p>
                        break;
                    case "inProgress":
                        <div class="progress">
                            <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar"
                                 aria-valuenow=@Html.Raw(Convert.ToInt32((DateTime.Now - log.Course.StartDate).TotalDays * 100 / log.Course.DurationDays))
                                 aria-valuemin="0" aria-valuemax="100" style="width:@Html.Raw(Convert.ToInt32((DateTime.Now - log.Course.StartDate).TotalDays * 100 / log.Course.DurationDays))%"></div>
                        </div>

                        break;
                }
        </div>
    </div>
}

